{"version":3,"sources":["Page/Header.js","Page/Footer.js","halaman/Bingkai.js","halaman/Hitung.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","judul","garisbawah","Footer","nama","instansi","Bingkai","state","gambar","e","preventDefault","this","setState","src","alt","width","onClick","ubahGambar","Component","Hitung","nilaiHitung","tambahHitung","hapusHitung","React","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4MAceA,G,YAZA,SAACC,GACf,OACC,6BACC,gCACC,4BAAKA,EAAMC,OACX,4BAAKD,EAAME,gBCGAC,MARf,SAAgBH,GACf,OACC,2CAAiBA,EAAMI,KAAvB,SAAmCJ,EAAMK,SAAzC,c,4BC0BaC,E,kDA3Bd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAM,CACVC,OAAO,sEAHS,E,uDAOPC,GACVA,EAAEC,iBACFC,KAAKC,SAAS,CAACJ,OAAO,oI,+BAGd,IAAD,OACP,OACC,6BACC,gCACA,yBAAKK,IAAKF,KAAKJ,MAAMC,OAAQM,IAAI,cAAcC,MAAM,QAAO,6BAC5D,4BAAQC,QAAS,SAACP,GAAD,OAAK,EAAKQ,WAAWR,KAAtC,qB,GAlBkBS,aC+CNC,E,kDA9Cf,WAAYnB,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAM,CACVa,YAAY,GAHI,E,yDAWJX,GACZA,EAAEC,iBACFC,KAAKC,SAAS,CACbQ,YAAaT,KAAKJ,MAAMa,YAAc,M,kCAI5BX,GACXA,EAAEC,iBACFC,KAAKC,SAAS,CACbQ,YAAY,M,+BAKL,IAAD,OACP,OAEC,6BACA,gCACA,mHACA,uDAA6BT,KAAKJ,MAAMa,aACxC,6BACA,4BAAQJ,QAAS,SAACP,GAAD,OAAK,EAAKY,aAAaZ,KAAxC,aACA,iCACA,4BAAQO,QAAS,SAACP,GAAD,OAAK,EAAKa,YAAYb,KAAvC,wB,GArCiBc,IAAML,WCgBZM,MAZf,WACE,OACE,6BACC,kBAAC,EAAD,CAAQvB,MAAM,4BAA4BC,WAAW,oCACrD,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,6BAAK,6BACL,kBAAC,EAAD,CAAQE,KAAK,iBAAiBC,SAAS,gBCDxBoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.3f848a3c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = (props) =>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<center>\r\n\t\t\t\t<h1>{props.judul}</h1>\r\n\t\t\t\t<h1>{props.garisbawah}</h1>\r\n\t\t\t</center>\r\n\t\t</div>\r\n\t\t\r\n\t\t)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n\treturn(\r\n\t\t<h3>dibuat oleh {props.nama} dari {props.instansi} Karawang</h3>\r\n\t\t)\r\n\r\n}\r\n\r\n\r\nexport default Footer;","import React, {Component} from 'react'\r\n\r\nclass Bingkai extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tgambar:\"https://upload.wikimedia.org/wikipedia/commons/e/e3/Taber_Hill.JPG\"\r\n\t\t}\r\n\r\n\t}\r\n\tubahGambar(e) {\r\n\t\te.preventDefault()\r\n\t\tthis.setState({gambar:\"http://static.asiawebdirect.com/m/kl/portals/langkawi-info-com/homepage/cenang/pagePropertiesImage/pantai-cenang-langkawi.jpg\"})\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<center>\r\n\t\t\t\t<img src={this.state.gambar} alt=\"Pemandangan\" width=\"600\"/><br/>\r\n\t\t\t\t<button onClick={(e)=>this.ubahGambar(e)}>Ubah Gambar</button>\r\n\t\t\t\t</center>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default Bingkai;","import React from 'react';\r\n\r\nclass Hitung extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tnilaiHitung:0\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t\ttambahHitung(e) {\r\n\t\t\te.preventDefault()\r\n\t\t\tthis.setState({\r\n\t\t\t\tnilaiHitung: this.state.nilaiHitung + 1\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\thapusHitung(e) {\r\n\t\t\te.preventDefault()\r\n\t\t\tthis.setState({\r\n\t\t\t\tnilaiHitung:0\r\n\t\t\t})\r\n\r\n\t\t}\r\n\r\n\t\trender(){\r\n\t\t\treturn(\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t<center>\r\n\t\t\t\t<p>____________________________________________________________________________________</p>\r\n\t\t\t\t<h1>Ini adalah Klik yang Ke-{this.state.nilaiHitung}</h1>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<button onClick={(e)=>this.tambahHitung(e)}>Klik Saya</button>\r\n\t\t\t\t<h1> </h1>\r\n\t\t\t\t<button onClick={(e)=>this.hapusHitung(e)}>Reset Hitungan</button>\r\n\t\t\t\t</center>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t)\r\n\r\n\t\t}\r\n\t\r\n}\r\n\r\n\texport default Hitung;","import React from 'react';\nimport './App.css';\nimport Header from './Page/Header';\nimport Footer from './Page/Footer';\nimport Bingkai from './halaman/Bingkai';\nimport Hitung from './halaman/Hitung';\nfunction App() {\n  return (\n    <div>\n     <Header judul=\"Tugas React Js-Hari Jumat\" garisbawah=\"===============================\"/>\n     <Bingkai/>\n     <Hitung/>\n     <br/><br/>\n     <Footer nama=\"Muhammad Iqbal\" instansi=\"SATPOL PP\"/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}